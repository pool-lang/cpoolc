-- Copyright 2012 Kevin Cox

--[[---------------------------------------------------------------------------]
[                                                                              ]
[  This software is provided 'as-is', without any express or implied           ]
[  warranty. In no event will the authors be held liable for any damages       ]
[  arising from the use of this software.                                      ]
[                                                                              ]
[  Permission is granted to anyone to use this software for any purpose,       ]
[  including commercial applications, and to alter it and redistribute it      ]
[  freely, subject to the following restrictions:                              ]
[                                                                              ]
[  1. The origin of this software must not be misrepresented; you must not     ]
[     claim that you wrote the original software. If you use this software in  ]
[     a product, an acknowledgment in the product documentation would be       ]
[     appreciated but is not required.                                         ]
[                                                                              ]
[  2. Altered source versions must be plainly marked as such, and must not be  ]
[     misrepresented as being the original software.                           ]
[                                                                              ]
[  3. This notice may not be removed or altered from any source distribution.  ]                                                           *
[                                                                              ]
[-----------------------------------------------------------------------------]]

L.import "qt"

S.install("LICENSE", "share/licenses/"..name.."/")

L.qt.addInclude "<"
L.qt.addInclude ">"

L.qt.addLib     "QtCore"

L.qt.addInclude "/usr/include/QxtCore/"
L.qt.addLib     "QxtCore"

src = T.List()
src:extend(T.dir.getfiles(".", "*.cpp"))
src:extend(T.dir.getfiles(".", "*.h"))

src = src:map(C.path)
src:remove_value(C.path"test.cpp")
T.pretty.dump(src)

if D.test then
	L.qt.addLib{"gtest", "pthread"}
	local files = T.List{"test.cpp"}:extend(src) -- Compile the tests
	files:remove_value(C.path"main.cpp")

	local test = L.qt.compile(files, "@test")
	S.addToTarget("test", test)
	S.addMagicToDefault "test"
end

exe = L.qt.compile(src, "@poolc")
S.addToDefault(exe)
S.install(exe, "bin/")
